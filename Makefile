#
# Build usable documents
#

DOCKER_RUN := docker run --rm -v ${PWD}:/build -w /build \
riscvintl/riscv-docs-base-container-image:latest

DEPS = src/contributors.adoc
DEPS += src/changelog.adoc
DEPS += src/intro.adoc
DEPS += src/terms.adoc
DEPS += src/binary-encoding.adoc
DEPS += src/ext-base.adoc
DEPS += src/ext-legacy.adoc
DEPS += src/ext-time.adoc
DEPS += src/ext-ipi.adoc
DEPS += src/ext-rfence.adoc
DEPS += src/ext-hsm.adoc
DEPS += src/ext-sys-reset.adoc
DEPS += src/ext-pmu.adoc
DEPS += src/ext-debug-console.adoc
DEPS += src/ext-sys-suspend.adoc
DEPS += src/ext-cppc.adoc
DEPS += src/ext-nested-acceleration.adoc
DEPS += src/ext-steal-time.adoc
DEPS += src/ext-sse.adoc
DEPS += src/ext-firmware-features.adoc
DEPS += src/ext-debug-triggers.adoc
DEPS += src/ext-mpxy.adoc
DEPS += src/ext-experimental.adoc
DEPS += src/ext-vendor.adoc
DEPS += src/ext-firmware.adoc
DEPS += src/references.adoc
DEPS += src/references.bib

DEPS += $(SPEC)/autogenerated/revision.adoc-snippet

IMAGES = images/riscv-sbi-intro1.png
IMAGES += images/riscv-sbi-intro2.png
IMAGES += images/riscv-sbi-hsm.png
IMAGES += images/riscv-sbi-sse-sm.png

TARGETS = riscv-sbi.pdf

COMMITDATE=$(shell git show -s --format=%ci | cut -d ' ' -f 1)
GITVERSION=$(shell git describe --tag)
SPEC=$(shell pwd)

ASCIIDOCTOR_PDF := asciidoctor-pdf
OPTIONS := --trace \
           -a compress \
           -a mathematical-format=svg \
           -a bibtex-file=src/references.bib \
           -a pdf-fontsdir=docs-resources/fonts \
           -a pdf-theme=docs-resources/themes/riscv-pdf.yml \
           --failure-level=ERROR
REQUIRES := --require=asciidoctor-diagram \
            --require=asciidoctor-bibtex \
            --require=asciidoctor-mathematical

.PHONY: all images clean

all: $(TARGETS)
images: $(IMAGES)

# Preserve all intermediate files
.SECONDARY:

images/%.png: src/%.ditaa
	mkdir -p `dirname $@`
	ditaa $< $@

$(SPEC)/autogenerated/revision.adoc-snippet: Makefile
	mkdir -p $(SPEC)/autogenerated
	echo ":revdate: ${COMMITDATE}" > $@-tmp
	echo ":revnumber: ${GITVERSION}" >> $@-tmp
	(test -f $@ && diff $@ $@-tmp) || mv $@-tmp $@

%.pdf: %.adoc $(DEPS)
	@echo "Checking if Docker is available..."
	@if command -v docker >/dev/null 2>&1 ; then \
		echo "Docker is available, building inside Docker container..."; \
		$(MAKE) build-container/$@; \
		cp -f build-container/$@ $@; \
	else \
		echo "Docker is not available, building without Docker..."; \
		$(MAKE) build-no-container/$@; \
		cp -f build-no-container/$@ $@; \
	fi

build-container/%.pdf: %.adoc $(DEPS)
	@echo "Starting build inside Docker container..."
	@mkdir -p `dirname $@`
	$(DOCKER_RUN) /bin/sh -c "$(ASCIIDOCTOR_PDF) $(OPTIONS) $(REQUIRES) --out-file=$@ $<"
	@echo "Build completed successfully inside Docker container."

build-no-container/%.pdf: %.adoc $(DEPS)
	@echo "Starting build..."
	@mkdir -p `dirname $@`
	$(ASCIIDOCTOR_PDF) $(OPTIONS) $(REQUIRES) --out-file=$@ $<
	@echo "Build completed successfully."

.PHONY: clean
clean:
	@echo "Cleaning up generated files..."
	rm -rf build-container build-no-container $(TARGETS)
	rm -rf $(SPEC)/autogenerated
	@echo "Cleanup completed."

.PHONY: install-debs
install-debs:
	sudo apt-get install pandoc asciidoctor ditaa ruby-asciidoctor-pdf

.PHONY: install-rpms
install-rpms:
	sudo dnf install ditaa pandoc rubygem-asciidoctor rubygem-asciidoctor-pdf
